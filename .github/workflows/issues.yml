name: Update JSON with issues

on:
  repository_dispatch:
    types: [update-json]

jobs:
  update-json:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{secrets.ORG_GITHUB_TOKEN}}

    - name: Fetch and log issue labels
      id: label_check
      run: |
        # Fetch issues
        response=$(curl -s -H "Authorization: token ${{ secrets.ORG_GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.event.client_payload.repo_with_owner }}/issues?state=all")

        echo "Repository: ${{ github.event.client_payload.repo_with_owner }}"
        
        # Print response to the logs
        echo "API Response:"
        echo "$response"
                
        # Check if the response is successful (HTTP status code 200)
        if [ $? -eq 0 ]; then
          # Change the working directory to 'static'
          cd static

          # Use jq to format the entire JSON response and write it to a file
          echo "$response" | jq '.' > issues.json
          
          # Change back to the original working directory
          cd ..

          echo "JSON file updated with raw API response."
          echo "::set-output name=labels_found::true" 
        else
          echo "Error: Unable to fetch issues or invalid response."
          echo "::set-output name=labels_found::false"
        fi

    - name: Commit changes
      if: steps.label_check.outputs.labels_found == 'true'  # Run only if labels were found
      run: |
        git config --global user.email "no-reply@github.com"
        git config --global user.name "GitHub Actions"
        git add static/issues.json
        git commit -m "Update issues.json"
        git push origin HEAD:${{ github.ref }}
